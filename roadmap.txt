atbi_marketing_system/
│
├── app/                             # Main application package
│   ├── __init__.py                   # Initialize Flask app, DB, register blueprints
│   ├── config.py                     # Configuration settings (dev/prod, DB URI)
│   ├── extensions.py                 # Extensions (SQLAlchemy, Migrate, etc.)
│   │
│   ├── models/                       # Database models
│   │   ├── __init__.py
│   │   ├── incubate.py                # Incubate model
│   │   ├── product.py                 # Product model (availability, stock)
│   │   ├── reservation.py             # Reservation model
│   │   ├── sales.py                   # Sales record model
│   │   └── notification.py            # Notification model
│   │
│   ├── routes/                       # Flask blueprints (modular routes)
│   │   ├── __init__.py
│   │   ├── showroom.py                # Virtual showroom & product browsing
│   │   ├── reservation.py             # Reservation endpoints
│   │   ├── inventory.py               # Inventory management
│   │   ├── notification.py            # Product status notifications
│   │   └── reports.py                 # Sales reports generation
│   │
│   ├── services/                     # Business logic layer
│   │   ├── __init__.py
│   │   ├── inventory_service.py       # Stock monitoring & updates
│   │   ├── notification_service.py    # Sending product status notifications
│   │   ├── reservation_service.py     # Reservation handling logic
│   │   └── report_service.py          # Report generation logic
│   │
│   ├── templates/                    # Jinja2 HTML templates
│   │   ├── layouts/                   # Base layouts (header, footer)
│   │   │   └── base.html
│   │   ├── showroom/                  # Pages for product showroom
│   │   │   ├── index.html
│   │   │   └── product_detail.html
│   │   ├── reservation/
│   │   │   ├── form.html
│   │   │   └── confirmation.html
│   │   ├── inventory/
│   │   │   └── dashboard.html
│   │   ├── notification/
│   │   │   └── list.html
│   │   └── reports/
│   │       └── sales_report.html
│   │
│   ├── static/                        # Static assets
│   │   ├── css/
│   │   │   └── styles.css
│   │   ├── js/
│   │   │   └── scripts.js
│   │   └── images/
│   │       └── logo.png
│   │
│   └── forms/                         # WTForms definitions
│       ├── __init__.py
│       ├── reservation_form.py
│       ├── product_form.py
│       └── inventory_form.py
│
├── migrations/                        # Flask-Migrate scripts for PostgreSQL
│
│
├── .env                               # Environment variables (DB URI, secrets)
├── requirements.txt                   # Python dependencies
├── run.py                             # Entry point to run Flask app
└── README.md                          # Project documentation



D:\programs\Postgres18\bin>initdb -D "D:\programs\Postgres18\data" -U postgres -W
The files belonging to this database system will be owned by user "Cyla".
This user must also own the server process.

The database cluster will be initialized with locale "English_Philippines.1252".
The default database encoding has accordingly been set to "WIN1252".
The default text search configuration will be set to "english".

Data page checksums are enabled.

Enter new superuser password: cyla0917

Enter it again:


creating directory D:/programs/Postgres18/data ... ok
creating subdirectories ... ok
selecting dynamic shared memory implementation ... windows
selecting default "max_connections" ... 100
selecting default "shared_buffers" ... 128MB
selecting default time zone ... Asia/Shanghai
creating configuration files ... ok
running bootstrap script ... ok
performing post-bootstrap initialization ... ok
syncing data to disk ... ok

initdb: warning: enabling "trust" authentication for local connections
initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.

Success. You can now start the database server using:

    pg_ctl -D ^"D^:^\programs^\Postgres18^\data^" -l logfile start

This manually start the server 
cd D:\programs\Postgres18\bin
pg_ctl -D "D:\programs\Postgres18\data" start
